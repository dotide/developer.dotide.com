---
layout: refs/dm.cn
current_section: overview
title: 总述｜ 数据存取
---

## 总述

### 基本数据模型

Dotide用一个4层的基本数据模型，来表达丰富的物联网应用数据。分别为：`产品(product)`，`设备(device)`，`数据流(datastream)`，`数据点(datapoint)`。

`产品`用来表示一类设备。例如："电瓶车防盗器"。每个`产品`都有一个`所有者`，例如开发或运营该产品的公司，团队或个人。每个`所有者`都对应着Dotide的一个`用户`。

`设备`用来表示一个特定的设备。例如："编号为001的电瓶车防盗器"。一个`产品`可以拥有很多`设备`。

一个`设备`又可以拥有很多`数据流`，用来存储一类随时间积累的数据。例如："001号防盗器的位置数据"和"001号防盗器的温度数据"。

一个`数据流`则可以包含很多`数据点`，每个`数据点`就是一个带有时间戳的数据记录。

### 读写权限控制

Dotide所有的数据存取操作都需要特定的权限，即需要通过`授权`。

Dotide数据存取操作的授权有两种方式，一种是基于认证的，一种是基于Key的。

**关于Key的操作，只能通过基于认证的授权。**

##### 1.基于认证的授权

认证即用户认证，方法参见[认证][auth]。通过认证，就得到了某个特定的Dotide`用户`的身份。
相应地，也可以得到该用户的所有`产品`以及包含的所有`设备`，`数据流`，`数据点`资源的读写权限。

##### 2.基于Key的授权

如果需要采取资源(产品，设备，数据流)特异性的授权策略，可以使用基于Key的授权。

每个Key包含`权限(permissions)`和`作用范围(resources)`两个部分，规定了对哪些资源可以有什么权限。具体形式可参考[Key][key]。在进行数据存取操作时，附上相应的Key，如果Key的`权限`和`作用范围`与要进行的数据操作相匹配，则授权成功。

附上Key的办法有两种：

**1)附加请求头:**

```
$curl -H "ApiKey: KEY-ID" https://api.dotide.com/v1
```

**2)作为请求参数**

```
$curl https://api.dotide.com/?api_key=KEY-ID
```
