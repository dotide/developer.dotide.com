---
layout: api/dm.cn
current_section: overview
title: 总述｜ Dotide DB
---

## 总述

### 基本数据模型

Dotide DB用一个4层的基本数据模型，来表达丰富的物联网应用数据。分别为：`产品(product)`，`设备(device)`，`数据流(datastream)`，`数据点(datapoint)`。

`产品`用来表示一类设备。例如："电瓶车防盗器"。每个产品都有一个`所有者`，例如开发或运营该产品的公司，团队或个人。每个所有者都对应着Dotide的一个`用户`。

`设备`用来表示一个特定的设备。例如："编号为001的电瓶车防盗器"。一个产品可以拥有很多设备。

一个设备又可以拥有很多`数据流`，用来存储一类随时间积累的数据。例如："001号防盗器的位置数据"和"001号防盗器的温度数据"。

一个数据流则可以包含很多`数据点`，每个数据点就是一个带有时间戳的数据记录。

产品，设备，数据流，数据点统称为`资源`。

### 读写权限控制

Dotide DB所有的数据存取操作都需要特定的权限，即需要通过`授权`。

Dotide DB数据存取操作的授权有两种方式，一种是基于认证的，一种是基于Key的。

**关于Key的操作，只能通过基于认证的授权。**

##### 1.基于认证的授权

关于认证的详细介绍，请参见[认证][auth]。通过认证，就得到了某个特定的Dotide`用户`的身份。
相应地，也可以得到该用户的所有资源的读写权限。

##### 2.基于Key的授权

如果需要采取资源特异性的授权策略，可以使用基于Key的授权。

每个Key包含`权限(permissions)`和`作用范围(resources)`两个部分，规定了对哪些资源可以有什么权限。具体形式可参考[Key][key]。在进行数据存取操作时，附上相应的Key，如果Key的权限和作用范围与要进行的数据操作相匹配，则授权成功。

附上Key的办法有两种：

**1)附加请求头:**

```
ApiKey: KEY_KID
```

**2)作为请求参数**

```
https://api.dotide.com/?api_key=KEY_KID
```

其中，`KEY_KID`代表key的kid属性的值。

[auth]: /cn/api/base/auth.html
[key]: /cn/api/dm/keys/create.html
