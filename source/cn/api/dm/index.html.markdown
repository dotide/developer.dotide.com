---
layout: api/dm.cn
current_section: overview
title: 总述｜ Dotide DB
---

## 总述

### 基本数据模型

Dotide DB采用了一种2层基本数据模型，可服务于时序数据的需求。这两层分别为`数据流(datastream)`和`数据点(datapoint)`。

一条`数据流`就是由若干个数据点所组成的序列，每个`数据点`都是一个带有时间戳的数据记录。

同一条数据流中的数据点都应该来自于同一个资源，不同的数据流应该代表来自不同的资源。

举例来说，在一所房子中，有卧室、起居室、客厅等房间，每一个房间都配备有一个智能温度计，可以将实时温度上传至web端。那么每一间房子都应该对应一条数据流，而每个房间的实时数据则属于同一条数据流的不同数据点。

<!-- ### 读写权限控制

Dotide DB所有的数据存取操作都需要特定的权限，即需要通过`授权`。

Dotide DB数据存取操作的授权有两种方式，一种是基于认证的，一种是基于Key的。

**关于Key的操作，只能通过基于认证的授权。**

##### 1.基于认证的授权

关于认证的详细介绍，请参见[认证][auth]。通过认证，就得到了某个特定的Dotide`用户`的身份。
相应地，也可以得到该用户的所有资源的读写权限。

##### 2.基于Key的授权

如果需要采取资源特异性的授权策略，可以使用基于Key的授权。

每个Key包含`权限(permissions)`和`作用范围(resources)`两个部分，规定了对哪些资源可以有什么权限。具体形式可参考[Key][key]。在进行数据存取操作时，附上相应的Key，如果Key的权限和作用范围与要进行的数据操作相匹配，则授权成功。

附上Key的办法有两种：

**1)附加请求头:**

```
ApiKey: KEY_KID
```

**2)作为请求参数**

```
https://api.dotide.com/?api_key=KEY_KID
```

其中，`KEY_KID`代表key的kid属性的值。

[auth]: /cn/api/base/auth.html
[key]: /cn/api/dm/keys/create.html -->
